@inherits LayoutComponentBase
@implements IDisposable
@using Toolbelt.Blazor.HotKeys
@inject HotKeys HotKeys
@inject NavigationManager NavigationManager

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        <a href="http://blazor.net" target="_blank" class="ml-md-auto">About</a>
    </div>

    <div class="content px-4">
        @Body

        <div class="hot-keys-cheat-sheet alert alert-secondary mt-4">
            <div><strong>Hot keys cheat sheet</strong></div>
            <ul>
                @foreach (var key in this.HotKeysContext.Keys)
                {
                    <li>
                        <span class="key">@key.ToString("{0}")</span> ... <span class="description">@key.ToString("{1}")</span>
                    </li>
                }
            </ul>
            <p>The hot key <span class="key">H</span> will work even if input element has focus.</p>
            <p>
                * Input element for the hot key <span class="key">H</span>: <input type="text" value="" class="form-control-sm" />
            </p>
        </div>
    </div>
</div>

@code
{
    HotKeysContext HotKeysContext;

    protected override void OnInitialized()
    {
        HotKeysContext = HotKeys.CreateContext()
        .Add(ModKeys.None, Keys.H, _ => GoTo("/"), "Go to Home page.", AllowIn.Input)
        .Add(ModKeys.None, Keys.C, _ => GoTo("/counter"), "Go to Counter page.")
        .Add(ModKeys.None, Keys.F, _ => GoTo("/fetchdata"), "Go to Fetch data page.");
    }

    public Task GoTo(string url)
    {
        NavigationManager.NavigateTo(url);
        return Task.CompletedTask;
    }

    public void Dispose()
    {
        HotKeysContext?.Dispose();
    }
}
